"use strict";angular.module("crudKit",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","ui.bootstrap","restangular"]),angular.module("crudKit.demo",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","ui.bootstrap","crudKit"]).config(["$routeProvider","crudKitConfigProvider",function(a,b){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl"}).otherwise({redirectTo:"/"}),b.addSchema("Widget",{$schema:"http://json-schema.org/draft-04/schema",title:"ACME Widget",description:"Some description of the widget.",type:"object",properties:{title:{title:"Title",description:"Something to describe this Widget",type:["string","null"]},email:{title:"Email",type:["string","null"],format:"email"},someInt:{title:"Some Integer",type:["integer","null"],"default":150,format:"integer"},someBool:{title:"Some Boolean",type:"boolean","default":!1},context_id:{title:"Context","enum":["Chinese","English"]},created:{title:"Date Created",format:"date-time"},summary:{title:"Summary",type:"string",format:"textarea"}},required:["title","summary","context_id"]})}]),angular.module("crudKit").directive("ckField",["$http","$compile","crudKitConfig",function(a,b,c){var d=function(a){var b="";switch(a){case"email":b="views/ckfield_email.html";break;case"phone":b="views/ckfield_phone.html";break;case"textarea":b="views/ckfield_textarea.html";break;case"boolean":b="views/ckfield_checkbox.html";break;case"date-time":b="views/ckfield_date.html";break;case"enum":b="views/ckfield_dropdown.html";break;case"hidden":b="views/ckfield_hidden.html";break;case"password":b="views/ckfield_password.html";break;case"radio":b="views/ckfield_radio.html";break;case"integer":b="views/ckfield_number.html";break;default:b="views/ckfield_textfield.html"}return(c.templatesPath||"")+b},e=["$scope",function(a){switch(a.err=null,a.type){}a.$on("validationReset",function(b,c){a.jsonSchema===c&&(console.info("validationReset on field `%s`",a.fieldName),a.err=null)}),a.$on("validationError",function(b,c){var d=c.schemaPath.split("/").splice(1),e=c.dataPath.split("/").splice(1).pop();!e&&d.length>1&&"required"===d[0]&&(e=a.jsonSchema.required[d[1]]),e===a.fieldName&&(console.info(c),a.err=c)}),a.$watch("model",function(){a.formController.updateModelField(a.fieldName,a.model[a.fieldName])},!0),a.$watch("formController.getScope().model",function(b){a.model=b},!0)}],f=function(c,e,f,g){c.formController=g,c.jsonSchema=g.getScope().schema,c.model=g.getScope().model,console.debug("Creating Field: ",c.fieldName),console.debug("custom field template url: ",c.fieldTemplateUrl);var h=c.jsonSchema.properties[c.fieldName],i=c.fieldTemplateUrl||d(h.enum?"enum":h.format||h.type);c.title=h.title||"",c.property=h,c.model[c.fieldName]=h.default?h.default:null,a.get(i).success(function(a){e.html(a),b(e.contents())(c)})};return{require:"^ckForm",controller:e,restrict:"E",scope:{fieldName:"@",fieldTemplateUrl:"@"},compile:function(){return{post:f}}}}]),angular.module("crudKit").service("JSONValidator",["$rootScope",function(a){if(tv4)return tv4.addFormat("date-time",function(a){return"string"==typeof a&&(a=new Date(a)),angular.isDate(a)?null:"Must be a Date"}),{validate:function(b,c){var d=tv4.validateMultiple(b,c);return d.errors.forEach(function(b){a.$broadcast("validationError",b)}),d}};throw new Error("tv4 is required. https://github.com/geraintluff/tv4")}]),angular.module("crudKit").controller("ckFormCtrl",["$rootScope","$scope","$element","JSONValidator","JsonApi",function(a,b,c,d){b.master=angular.copy(b.model),b.validationResult=null,b.reset=function(){b.model=b.master},b.validate=function(){return console.debug("Validating model.."),b.validationResult=d.validate(b.model,b.schema),console.debug("Validation Result",b.validationResult,toString()),b.validationResult},b.save=function(){console.debug("ckForm: save()"),a.$broadcast("validationReset",b.schema),b.validate().valid&&(console.debug("ckForm: calling onSave"),b.onSave({$model:b.model,$next:function(a,c){a?console.error(a):(b.model=c||b.model,b.master=angular.copy(b.model),console.debug("ckForm: onSave result: ",c))}}))},b.delete=function(){throw new Error("Not implemented")},this.getScope=function(){return b},this.updateModelField=function(a,c){b.model[a]=c},b.debugForm=function(){console.log("form $scope.delete:",b.delete),console.log("form $scope.name:",b.name),console.log("form $scope[$scope.name]:",b[b.name])}}]).directive("ckForm",function(){return{templateUrl:"views/ckform_form.html",controller:"ckFormCtrl",replace:!0,transclude:"element",scope:{title:"=",description:"=",name:"@",schema:"=",model:"=",onSave:"&",onDelete:"&",canDelete:"=",columns:"=",debug:"="},restrict:"E",compile:function(){return{pre:function(){},post:function(a,b){console.info("FormControl: ",a.name),console.debug(b.contents())}}}}}),angular.module("crudKit").provider("crudKitConfig",function(){this.schemas={},this.addSchema=function(a,b){this.schemas[a]=b},this.set=function(a,b){if("schemas"===a)throw new Error("The key 'schemas' is reserved.");this[a]=b},this.$get=function(){return this}}),angular.module("crudKit").service("JsonApi",["crudKitConfig","Restangular",function(a,b){this.Restangular=b,this.schemas=a.schemas,this.models={},this.test=function(){console.log("JsonApi Service test(). config: ",a)};for(var c in this.schemas)console.debug("Registering json schema: `%s`",c),this.models[c]={}}]),angular.module("crudKit.demo").controller("MainCtrl",["$scope",function(){}]),angular.module("crudKit.demo").controller("AboutCtrl",["$scope","$rootScope","$filter","JsonApi","JSONValidator","crudKitConfig",function(a,b,c,d,e,f){a.api=d,a.widgetSchema=f.schemas.Widget,a.widgetInstance={title:"TEST TITLE"},a.widgetSchemaStr=c("json")(a.widgetSchema),a.widgetInstanceStr=c("json")(a.widgetInstance),a.widgetIsValid=!1,a.validate=function(){a.validationResult=e.validate(a.widgetInstance,a.widgetSchema),a.widgetIsValid=a.validationResult.valid},a.updateSchema=function(b){a.widgetSchema=angular.fromJson(b)},a.clearErrors=function(){console.log("Clearing Errors..."),b.$broadcast("validationReset",a.widgetSchema)},a.$on("$destroy",function(a,b){console.debug("EVENT: $destroy: ",a,b)}),a.saveWidget=function(a,b){console.debug(a),b(null,a)}}]);