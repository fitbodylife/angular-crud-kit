"use strict";angular.module("crudKit",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","ui.bootstrap"]).config(function(){}),angular.module("crudKit").controller("MainCtrl",["$scope",function(a){a.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}]),angular.module("crudKit").controller("AboutCtrl",["$scope","JSONValidator","$rootScope","$filter",function(a,b,c,d){a.widgetSchema={$schema:"http://json-schema.org/draft-04/schema",title:"ACME Widget",type:"object",properties:{title:{title:"Title",description:"Something to describe this Widget",type:["string","null"]},email:{title:"Email",type:["string","null"],format:"email"},someInt:{title:"Some Integer",type:["integer","null"],"default":150},useful:{title:"Useful",type:"boolean","default":!1},context_id:{title:"Context","enum":["tc","sc"]},created:{title:"Date Created",format:"date-time"},summary:{title:"Summary",type:"string",format:"textarea"}},required:["title","summary","context_id"]},a.widgetInstance={},a.widgetSchemaStr=d("json")(a.widgetSchema),a.widgetInstanceStr=d("json")(a.widgetInstance),a.widgetIsValid=!1,a.validate=function(){a.validationResult=b.validate(a.widgetInstance,a.widgetSchema),a.widgetIsValid=a.validationResult.valid},a.updateSchema=function(b){a.widgetSchema=angular.fromJson(b),console.log(a.widgetSchema)},a.$watch("widgetSchemaStr",function(b){a.widgetSchema=angular.fromJson(b),console.debug(a.widgetSchema)},!0),a.$watch("widgetInstanceStr",function(b){a.widgetInstance=angular.fromJson(b),console.debug(a.widgetInstance)},!0),a.$watch("widgetInstance",function(b){a.widgetInstanceStr=d("json")(b),console.debug(a.widgetInstanceStr)},!0),a.$watch("widgetInstance",function(){},!0),a.exampleFields="",a.clearErrors=function(){console.log("Clearing Errors..."),c.$broadcast("validationReset",a.widgetSchema)},a.$on("$destroy",function(a,b){console.debug("EVENT: $destroy: ",a,b)}),a.saveWidget=function(a,b){b(null,a)}}]),angular.module("crudKit").directive("ckField",["$http","$compile",function(a,b){var c=function(a){var b="";switch(a){case"email":b="views/ckfield_email.html";break;case"phone":b="views/ckfield_phone.html";break;case"textarea":b="views/ckfield_textarea.html";break;case"boolean":b="views/ckfield_checkbox.html";break;case"date-time":b="views/ckfield_date.html";break;case"enum":b="views/ckfield_dropdown.html";break;case"hidden":b="views/ckfield_hidden.html";break;case"password":b="views/ckfield_password.html";break;case"radio":b="views/ckfield_radio.html";break;case"integer":b="views/ckfield_number.html";break;default:b="views/ckfield_textfield.html"}return b},d=["$scope",function(a){switch(a.err=null,a.type){}a.$on("validationReset",function(b,c){a.jsonSchema===c&&(console.info("validationReset on field `%s`",a.fieldName),a.err=null)}),a.$on("validationError",function(b,c){var d=c.schemaPath.split("/").splice(1),e=c.dataPath.split("/").splice(1).pop();!e&&d.length>1&&"required"===d[0]&&(e=a.jsonSchema.required[d[1]]),e===a.fieldName&&(console.info(c),a.err=c)})}],e=function(d,e){var f=d.jsonSchema.properties[d.fieldName],g=c(f.enum?"enum":f.format||f.type);d.title=f.title||"",d.property=f,d.model[d.fieldName]=f.default?f.default:null,a.get(g).success(function(a){e.html(a),b(e.contents())(d)})};return{controller:d,restrict:"E",scope:{jsonSchema:"=",fieldName:"=",model:"="},link:e}}]),angular.module("crudKit").service("JSONValidator",["$rootScope",function(a){if(tv4)return tv4.addFormat("date-time",function(a){return"string"==typeof a&&(a=new Date(a)),angular.isDate(a)?null:"Must be a Date"}),{validate:function(b,c){var d=tv4.validateMultiple(b,c);return d.errors.forEach(function(b){a.$broadcast("validationError",b)}),d}};throw new Error("tv4 is required. https://github.com/geraintluff/tv4")}]),angular.module("crudKit").controller("ckFormCtrl",["$scope","JSONValidator",function(a,b){a.master=angular.copy(a.model),a.validationResult=null,a.reset=function(){a.model=a.master},a.validate=function(){return a.validationResult=b.validate(a.model,a.schema),a.validationResult},a.save=function(){console.debug("ckForm: save()"),a.$broadcast("validationReset",a.schema),a.validate().valid&&(console.debug("ckForm: calling onSave"),a.onSave({$model:a.model,$next:function(b,c){b?console.error(b):(a.model=c||a.model,a.master=angular.copy(a.model),console.debug("ckForm: onSave result: ",c))}}))},a.delete=function(){throw new Error("Not implemented")}}]).directive("ckForm",function(){return{templateUrl:"views/ckform_form.html",controller:"ckFormCtrl",scope:{title:"=",description:"=",name:"=",schema:"=",model:"=",onSave:"&",onDelete:"&",canDelete:"=",columns:"=",debug:"="},restrict:"E",link:function(a){console.log("FormControl: ",a[a.name])}}}),angular.module("crudKit.demo",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","ui.bootstrap","crudKit","ui.ace"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl"}).otherwise({redirectTo:"/"})}]);